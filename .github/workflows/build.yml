on:
  push:
    branches:
      - push_public_image

name: Deploy

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Configure AWS credentials
        id: aws-login
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-skip-session-tagging: true
          role-duration-seconds: 3600
          aws-region: ap-southeast-1

      - name: Build, tag and push Docker Image
        id: build-image
        env:
          REPOSITORY: somleng-freeswitch
          IMAGE_TAG: ${{ github.sha }}
          AWS_REGION: us-east-1
        run: |
          ECR_PUBLIC_REGISTRY=$(aws ecr-public describe-registries --output text --query 'registries[0].registryUri')
          docker build -t $ECR_PUBLIC_REGISTRY/$REPOSITORY:$IMAGE_TAG -t $ECR_PUBLIC_REGISTRY/$REPOSITORY:latest .
          aws ecr-public get-login-password | docker login --username AWS --password-stdin public.ecr.aws
          docker push --all-tags
          docker logout
          echo "::set-output name=image::$ECR_PUBLIC_REGISTRY/$REPOSITORY:$IMAGE_TAG"

      - name: Prepare task definition
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: deploy/production/appserver_task_definition.json
          container-name: somleng-freeswitch
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy App
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: somleng-freeswitch
          cluster: somleng
          wait-for-service-stability: true
